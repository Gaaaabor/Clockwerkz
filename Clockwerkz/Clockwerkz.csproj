<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>3.3</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <StartupObject>Clockwerkz.Program</StartupObject>
    <UserSecretsId>5018dd30-b96f-453b-a0cb-bd58faffc603</UserSecretsId>
    <ApplicationIcon>clockwerkz.ico</ApplicationIcon>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>Clockwerkz.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="4.4.0" />
    <PackageReference Include="JWT" Version="5.0.1" />
    <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="7.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.2.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.3" />
    <PackageReference Include="Quartz.Serialization.Json" Version="3.0.7" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\components\Home.tsx" />
    <None Remove="ClientApp\components\job\job.component.tsx" />
    <None Remove="ClientApp\components\job\jobDashboard.component.tsx" />
    <None Remove="ClientApp\components\job\jobGroup.component.tsx" />
    <None Remove="ClientApp\components\job\jobModal.component.tsx" />
    <None Remove="ClientApp\components\job\jobPreview.component.tsx" />
    <None Remove="ClientApp\components\job\jobTrigger.component.tsx" />
    <None Remove="ClientApp\components\NavMenu.tsx" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Clockwerkz.Application\Clockwerkz.Application.csproj" />
    <ProjectReference Include="..\Clockwerkz.Common\Clockwerkz.Common.csproj" />
    <ProjectReference Include="..\Clockwerkz.Infrastructure\Clockwerkz.Infrastructure.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="jobsettings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="quartzsettings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Views\Shared\" />
    <Folder Include="wwwroot\" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\components\job\jobModal.component.tsx" />
    <TypeScriptCompile Include="ClientApp\components\job\jobPreview.component.tsx" />
    <TypeScriptCompile Include="ClientApp\components\job\jobGroup.component.tsx" />
    <TypeScriptCompile Include="ClientApp\components\job\job.component.tsx" />
    <TypeScriptCompile Include="ClientApp\components\job\jobDashboard.component.tsx" />
    <TypeScriptCompile Include="ClientApp\components\job\jobTrigger.component.tsx" />
    <TypeScriptCompile Include="ClientApp\components\navMenu\navMenu.tsx" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
